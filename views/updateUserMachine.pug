extends base

mixin navItem(link, text, icon, active)
    li(class=`${active ? 'side-nav--active' : ''}`)
        a(href=`${link}`)
            svg
                use(xlink:href=`/img/icons.svg#icon-${icon}`)
            | #{text}

block content
    main.main
        .user-viewAccount
            nav.user-view__menu

              ul.side-nav
                    +navItem('/api/v1/me', 'My Settings', 'settings', true)
                    +navItem('/api/v1/myMalReports', 'My ASMA-error reports', 'user-error-report')

              - if(user.role === 'admin' || user.role === 'Chef')
                  .admin-nav
                      h5.admin-nav__heading= `${user.role}`
                      ul.side-nav
                          +navItem('/api/v1/manage_users', 'Manage users', 'users')
                          +navItem('/api/v1/manage_machinery', 'Manage machinery', 'machine')
                          +navItem('/api/v1/manage_user-machine', 'Manage user/machine', 'user-m')
                          +navItem('/api/v1/manage_ASMAmachine', 'Manage ASMA/machine', 'machine-asma')

            .user-view__content
                .user-view__form-container
                    br
                    br
                    h2.heading-secondary.ma-bt-md= `Edit machine for: ${data.user.firstName} ${data.user.lastName}`
                    form.form.form-userMachine-data
                        // hide these fields, do not delete! it needs the ID's!
                        input#userID(type="hidden", value=data.user._id)
                        div(class="form__group")
                            label(class="form__label", for="employeeNumber") Employee Number
                            input#employeeNumber(class="form__input", type="text", readonly= true, value=data.user.employeeNumber, style="background-color: lightgray")
                        div(class="form__group")
                            label(class="form__label", for="firstName") Firstname
                            input#firstName(class="form__input", type="text", readonly= true, value=data.user.firstName, style="background-color: lightgray")
                        div(class="form__group")
                            label(class="form__label", for="lastName") Lastname
                            input#lastName(class="form__input", type="text", readonly= true, value=data.user.lastName, style="background-color: lightgray")
                        div(class="form__group")
                            label(class="form__label", for="department") User- Departments
                            input#department(class="form__input", type="text", value=data.user.department.join(', '), readonly, style="background-color: lightgrey;")

                        div(class="form__group")
                            br
                            h2.heading-secondary Departments / machinery
                            script.
                              console.log("test2222")

                        - let hasSelectedMachine = false

                        each department in data.user.department
                            - var isChecked = data.user.department && data.user.department.includes(department)
                            - const departmentData = data.departments.find(dep => dep.name === department)

                            if departmentData
                                label(class="form__label" style="display: block; margin-bottom: 10px;")
                                    input#department(class="form__checkbox-box", type="checkbox", name="departments", value=department, checked=isChecked, disabled=true, style="width: 20px; height: 20px;")
                                    span(class="form__checkbox-name", style="font-size: 1.5rem;") #{department}

                                each machine in departmentData.machinery
                                  - var checkedMachine = data.user.machinery && data.user.machinery.includes(machine._id)

                                  label(class="form__label" style="display: block; margin-bottom: 10px; margin-left: 20px;")
                                      input#machineryInDepartment(class="form__checkbox-box", type="checkbox", name="machineryInDepartment", value=machine._id, checked=checkedMachine, disabled=false, style="width: 20px; height: 20px;")
                                      span(class="form__checkbox-name", style="font-size: 1.5rem;")
                                          | #{machine.name}

                                  - if (checkedMachine)
                                  - hasSelectedMachine = true

                        if hasSelectedMachine
                            br
                            button.btn.btn--small.btn--green.btn--saveUpdateUserMachine Save
                        br
                        br
                        a.btn.btn--small.btn--gray(href="/api/v1/manage_user-machine") Cancel

                            script.
                              const machineryInput = document.querySelector('#machineryInDepartment');
                              if (machineryInput) {
                                const machineryInputs = document.querySelectorAll('input[name="machineryInDepartment"]');
                                const selectedMachinery = [];

                                machineryInputs.forEach(input => {
                                  const machineId = input.value;
                                  const isChecked = input.checked;

                                  input.addEventListener('change', (event) => {
                                    const isChecked = event.target.checked;

                                    if (isChecked) {
                                      selectedMachinery.push(machineId);
                                    } else {
                                      const index = selectedMachinery.indexOf(machineId);
                                      if (index > -1) {
                                        selectedMachinery.splice(index, 1);
                                      }
                                    }

                                    console.log(selectedMachinery);
                                    if (machineryInput) {
                                      machineryInput.value = selectedMachinery;
                                    }
                                  });

                                  if (isChecked) {
                                    selectedMachinery.push(machineId);
                                  }
                                });

                                console.log(selectedMachinery);
                                if (machineryInput) {
                                  machineryInput.value = selectedMachinery;
                                }
                              } else {
                                console.log("Element with ID 'machineryInDepartment' not found.");
                              }

extends base

mixin navItem(link, text, icon, active)
    li(class=`${active ? 'side-nav--active' : ''}`)
        a(href=`${link}`)
            svg
                use(xlink:href=`/img/icons.svg#icon-${icon}`)
            | #{text}

block content
    main.main
        .user-viewAccount
            nav.user-view__menu

                ul.side-nav
                    +navItem('#', 'Meine Einstellungen', 'settings', true)
                    +navItem('/api/v1/myMalReports', 'Meine ASMA-Error Reports', 'user-error-report')

                - if(user.role === 'admin' || user.role === 'Chef')
                    .admin-nav
                        h5.admin-nav__heading= `${user.role}`
                        ul.side-nav
                            +navItem('/api/v1/manage_users', 'Benutzer- Verwaltung', 'users')
                            +navItem('/api/v1/manage_machinery', 'Maschinen- Verwaltung', 'machine')
                            +navItem('/api/v1/manage_user-machine', 'Benutzer/Maschine- Verwaltung', 'user-m')
                            +navItem('/api/v1/manage_ASMAmachine', 'ASMA/Maschine- Verwaltung', 'machine-asma')

            .user-view__content
                .user-view__form-container
                    h2.heading-secondary.ma-bt-md Deine Konto-Daten

                    //- Without API
                    //- form.form.form-user-data(action='/submit-user-data' method='POST')
                    //- für photo hochladen ohne API --> action... POST, und zusätzlich dazu:  method='POST', enctype='multipart/form-data')

                    //- WITH API    darf dann nicht stehen method=POST usw
                    form.form.form-user-data
                        input#userId(type="hidden", value=`${user._id}`)
                        //div(class="form__group")
                            label(class="form__label", for="employeeNumber") Mitarbeiter- Number
                            input#employeeNumber(class="form__input", type="number", value=user.employeeNumber, readonly, style="background-color: lightgrey;")
                        div(class="form__group")
                            label(class="form__label", for="firstname") Vorname
                            input#firstname(class="form__input", type="text", value=user.firstName)
                        div(class="form__group")
                            label(class="form__label", for="lastname") Nachname
                            input#lastname(class="form__input", type="text", value=user.lastName)
                        div(class="form__group")
                            label(class="form__label", for="birthDate") Geburtsdatum
                            input#birthDate(class="form__input", type="text", value=user.birthDate, readonly, style="background-color: lightgrey;")
                        div(class="form__group")
                            label(class="form__label", for="gender") Geschlecht
                            //input#gender(class="form__input", type="text", value=user.gender)
                            select#gender(class="form__input", value=user.gender)
                                option(value="male", selected=user.gender === 'male') Männlich
                                option(value="female", selected=user.gender === 'female') Weiblich
                        div(class="form__group")
                            label(class="form__label", for="language") Sprache
                            //input#language(class="form__input", type="text", value=user.language, readonly, style="background-color: lightgrey;")
                            select#language(class="form__input")
                                option(value="en", selected=user.language === 'en') Englisch
                                option(value="de", selected=user.language === 'de') Deutsch

                        div(class="form__group")
                            label(class="form__label", for="professional") Beruf
                            input#professional(class="form__input", type="text", value=user.professional, readonly, style="background-color: lightgrey;")
                        div(class="form__group")
                            label(class="form__label", for="role") Rolle
                            input#role(class="form__input", type="text", value=user.role, readonly, style="background-color: lightgrey;")
                        div(class="form__group")
                            label(class="form__label", for="department") Abteilung
                            input#department(class="form__input", type="text", value=user.department.join(', '), readonly, style="background-color: lightgrey;")
                        div(class="form__group")
                            label(class="form__label", for="machinery") Maschinen
                            input#machinery(class="form__input", type="text", value=user.machinery.length > 0 ? user.machinery.map(machine => machine.name).join(', ') : "Keine Maschine", readonly, style="background-color: lightgrey;")
                        //-.form__group
                            label.form__label(for='name') Name
                            input#name.form__input(type='text', value=`${user.name}`,autocomplete="user-name", required, name='name')
                        .form__group.ma-bt-md
                            label.form__label(for='email') Email address
                            input#email.form__input(type='email', value=`${user.email}`, name='email')
                        .form__group.form__photo-upload
                            img.form__user-photo(src=`/img/users/${user.photo}`, alt='User photo')

                            input.form__upload(type='file', accept='image/*', id='photo', name='photo')
                            label(for='photo') Wähle neues Foto

                        .form__group.right
                            button.btn.btn--small.btn--green Speichern der Einstellungen

                .line &nbsp;

                .user-view__form-container
                    h2.heading-secondary.ma-bt-md Password- Wechsel
                    form.form.form-user-password
                        //-.form__group     //- damit Fehler weg geht: Password forms should have (optionally hidden) username fields for accessibility: aber egal
                            label.form__label(for='username') Username (optional)
                            input#username.form__input(type='hidden', autocomplete='username', placeholder='Enter your username (optional)', aria-label='Username', hidden)
                        .form__group
                            label.form__label(for='password-current') Aktuelles Passowrt
                            input#password-current.form__input(type='password',autocomplete='current-password', placeholder='••••••••', required, minlength='8')
                        .form__group
                            label.form__label(for='password') Neues Passwort
                            input#password.form__input(type='password', autocomplete='new-password', placeholder='••••••••',  required, minlength='8')
                        .form__group.ma-bt-lg
                            label.form__label(for='password-confirm') Passwort bestätigen
                            input#password-confirm.form__input(type='password', autocomplete='new-password', placeholder='••••••••', required, minlength='8')
                        .form__group.right
                            button.btn.btn--small.btn--green.btn--save-password Speichern Passwort

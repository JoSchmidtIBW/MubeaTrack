extends base

mixin navItem(link, text, icon, active)
  li(class=`${active ? 'side-nav--active' : ''}`)
    a(href=`${link}`)
      svg
        use(xlink:href=`/img/icons.svg#icon-${icon}`)
      | #{text}

block content

  main.main
    .user-view
      nav.user-view__menu

        ul.side-nav
            +navItem('/api/v1/me', 'My Settings', 'settings', true)
            +navItem('/api/v1/myMalReports', 'My ASMA-error reports', 'user-error-report')

        - if(user.role === 'admin' || user.role === 'Chef')
            .admin-nav
                h5.admin-nav__heading= `${user.role}`
                ul.side-nav
                    +navItem('/api/v1/manage_users', 'Manage users', 'users')
                    +navItem('/api/v1/manage_machinery', 'Manage machinery', 'machine')
                    +navItem('/api/v1/manage_user-machine', 'Manage user/machine', 'user-m')
                    +navItem('/api/v1/manage_ASMAmachine', 'Manage ASMA/machine', 'machine-asma')

      .user-view__content
        .user-view__form-container
          h2.heading-secondary.ma-bt-md Create new User
          form.form.form-new-user-data
            div(class="form__group")
              label(class="form__label", for="employeeNumber") Employee Number
              input#employeeNumber(class="form__input" type="number" placeholder="70220" required="required" min="10000" max="99999")
            div(class="form__group")
              label(class="form__label", for="firstname") Firstname
              input#firstname(class="form__input", type="text", placeholder="Max", required="required")
            div(class="form__group")
              label(class="form__label", for="lastname") Lastname
              input#lastname(class="form__input", type="text", placeholder="Mustermann", required="required")
            div(class="form__group")
              label(class="form__label", for="birthDate") Birth date
              input#birthDate(class="form__input", type="text", placeholder="01.01.2002", required="required", pattern="^(0[1-9]|[1-2][0-9]|3[0-1])[.](0[1-9]|1[0-2])[.][0-9]{4}$")
            div(class="form__group")
              label(class="form__label", for="gender") Gender
              select#gender(class="form__input")
                option(value="male") male
                option(value="Female") female
            div(class="form__group")
              label(class="form__label", for="language") Language
              select#language(class="form__input")
                option(value="en") English
                option(value="de") German
            div(class="form__group")
              label(class="form__label", for="professional") Professional
              input#professional(class="form__input", type="text", placeholder="professional")
            div(class="form__group")
              label(class="form__label", for="email") Email address
              input#email(class="form__input", type="email", placeholder="you@mubea.com")
            div(class="form__group ma-bt-md")
              label(class="form__label", for="password") Password
              input#password(class="form__input", type="password", placeholder="••••••••", required="required", minlength="8")
            div(class="form__group ma-bt-md")
              label(class="form__label", for="passwordConfirm") Confirm Password
              input#passwordConfirm(class="form__input", type="password", placeholder="••••••••", required="required", minlength="8")
            div(class="form__group")
              label(class="form__label", for="role") Role
              select#role(class="form__input")
                option(value="user") User
                option(value="Unterhalt") Unterhalt
                option(value="Schichtleiter") Schichtleiter
                option(value="Chef") Chef

            div(class="form__group")
              label(class="form__label", for="department") Departments
              each department in data.departments

                label(class="form__checkbox-label" style="display: block; margin-bottom: 10px; border: none")
                  |
                  input#department(class="form__checkbox-box", type="checkbox", name="departments", value=department.name, checked=checked,  style="width: 20px; height: 20px;")
                  span(class="form__checkbox-name", style="font-size: 1.5rem;") #{department.name}

            div(class="form__group")
              button.btn.btn--green Save
              a.btn-space
              a.btn.btn--small.btn--gray(href=`/api/v1/manage_users`) Cancel

            script.
              function getSelectedDepartments() {
                const departmentCheckboxes = document.querySelectorAll('input[name="departments"]');
                let selectedDepartments = [];
                departmentCheckboxes.forEach((checkbox) => {
                  if (checkbox.checked) {
                    selectedDepartments.push(checkbox.value);
                  }
                });
                if (selectedDepartments.length > 0) {
                  console.log(selectedDepartments + " sind angewählt");
                  document.querySelector('#department').value = selectedDepartments;
                } else {
                  alert('Please select at least one department.');
                }
              }



extend base

mixin navItem(link, text, icon, active)
    li(class=`${active ? 'side-nav--active' : ''}`)
        a(href=`${link}`)
            svg
                use(xlink:href=`/img/icons.svg#icon-${icon}`)
            | #{text}

block content
    main.mainASMAmachine
        .user-viewASMAmachine
            nav.user-view__menu

                ul.side-nav
                    +navItem('#', `${data.machine.name}`, 'machine', true)
                    +navItem('#', 'Sonstige', 'settings')
                .admin-navs
                    h5.admin-nav__heading XXXXX
                    ul.side-nav
                        +navItem('#', 'Störmeldung', 'settings', true)
                        +navItem('#', 'Verbrauchsmaterial', 'user-error-report')
                        +navItem('#', 'Prüfmittel', 'user-error-report')
                        +navItem('#', 'Planung', 'user-error-report')



            .user-view__content
                .user-view__ASMAform-container
                    h2.heading-secondary.ma-bt-md Machine reporter
                        //-form.form.form-ASMAbtn-data
                        //-main.mainMine
                        br
                        h1 MaschinenID:
                        h1= data.machine._id
                        h1= data.machine.name
                        br
                        button.btn(id="machineStatusRunBtn" style=(data.machine.statusRun ? 'background-color: lightgreen' : 'background-color: red')
                            data-statusRun=(data.machine.statusRun ? 'true' : 'false'),data-machineIDRun=data.machine._id) Anlage Läuft!!
                        br
                        table
                          each sector in data.machine.sectorASMA
                              tr
                                  td(colspan="2")
                                      h1(style="color:red")= sector.name
                                      h2= sector.description_de
                                      br
                              each component in sector.components
                                  tr
                                      td
                                          h2= component.name_de
                                          h4= component.description_de
                                          br
                                      td
                                          table
                                            each detail, index in component.componentDetails
                                                if index % 4 === 0
                                                    tr
                                                td(style="border: 1px solid pink; padding: 10px; margin: 5px;")
                                                    button.btn(
                                                        class=`stoerBtn stoerBtn-${index}`,
                                                        id=`stoerBtn-${index}`,
                                                        style=(detail.status ? 'background-color: green' : 'background-color: red'),
                                                        data-status=(detail.status ? 'true' : 'false'),data-detail-id=detail._id
                                                    )= detail.name_de
                                                    //-`${detail.name_de},${detail._id}`
                                                br
                    form.form.form-ASMAbtn-data
                        //todo diese felder verstecken, nicht löschen! es braucht die ID's
                        br
                        label machineID
                        input#machineID(type="text", name="machineID", value=data.machine._id, style="width: 300px;")
                        br
                        label CurrentUserID
                        input#currentUserID(type="text",  name="currentUserID", value=data.currentUser._id, style="width: 300px;")
                        br
                        label departmentName
                        input(type="text", id="departmentName", name="departmentName",value=data.departmentName, style="width: 600px;")
                        br
                        label machineName
                        input(type="text", id="machineName", name="machineName",value=data.machineName, style="width: 600px;")
                        br
                        label ASMABTNid's
                        input(type="text", id="selectedIdsInput", name="selectedIds",  style="width: 600px;")
                        br
                        label AMSA Run-ID
                        input(type="text", id="selectedRunIdInput", name="selectedRunId", style="width: 600px;")
                        br
                        br
                        button.btn.btn--small.btn--gray(id="abszBtn") Störung-Meldung absetzen
                        br
                        br
                        //-a.btn.btn--small.btn--gray(href=`/api/v1/departments/${data.departmentName}/machinery/${data.machineName}`) Return

    script.
      let pathValue = 'xx';

      console.log("pathValue: " + pathValue);
      const machineStatusRunBtn = document.getElementById('machineStatusRunBtn')
      const statusRun = machineStatusRunBtn.getAttribute('data-statusRun');
      const machineIDRun = machineStatusRunBtn.getAttribute('data-machineIDRun')
      let isOrange = true;
      let isRed = true;
      let selectedRunId = "";

      machineStatusRunBtn.addEventListener('click', function() {
        console.log("machineFireBtn click", statusRun,machineIDRun)
        if (statusRun === 'true') {
          if (isOrange) {
            machineStatusRunBtn.style.backgroundColor = 'orange';
            isOrange = false;
            isRed = false;
            //selectedRunId.push(componentDetail_id); // data-detail-id zum Array hinzu
            selectedRunId = machineIDRun
          } else {
            machineStatusRunBtn.style.backgroundColor = 'lightgreen';
            isOrange = true;
            isPink = false;
            //selectedRunId.splice(selectedIds.indexOf(componentDetail_id), 1); // Entferne die data-detail-id aus Array
            selectedRunId = ""
          }
        } else {
          if (isRed) {
            machineStatusRunBtn.style.backgroundColor = 'pink';
            isRed = false;
            isOrange = false;

          } else {
            machineStatusRunBtn.style.backgroundColor = 'red';
            isRed = true;
            isOrange = false;

          }
        }
      })

      const stoerBtns = document.querySelectorAll('.stoerBtn');
      const selectedIds = [];

      stoerBtns.forEach(function(btn) {
        let status = btn.getAttribute('data-status');
        let componentDetail_id = btn.getAttribute('data-detail-id');
        let isYellow = true;
        let isPink = true;

        btn.addEventListener('click', function() {
          if (status === 'true') {
            if (isYellow) {
              btn.style.backgroundColor = 'yellow';
              isYellow = false;
              isPink = false;
              selectedIds.push(componentDetail_id); // data-detail-id zum Array hinzu
            } else {
              btn.style.backgroundColor = 'green';
              isYellow = true;
              isPink = false;
              selectedIds.splice(selectedIds.indexOf(componentDetail_id), 1); // Entferne data-detail-id aus Array
            }
          } else {
            if (isPink) {
              btn.style.backgroundColor = 'pink';
              isPink = false;
              isYellow = false;
              //selectedIds.push(componentDetail_id); // braucht es nicht
            } else {
              btn.style.backgroundColor = 'red';
              isPink = true;
              isYellow = false;
              //selectedIds.splice(selectedIds.indexOf(componentDetail_id), 1); // braucht es nicht
            }
          }
        });
      });

      const abszBtn = document.getElementById('abszBtn');

      abszBtn.addEventListener('click', function() {
        console.log(selectedIds); // Array mit ausgewählten data-detail-ids
        console.log(selectedRunId)
        selectedIdsInput.value = JSON.stringify(selectedIds);
        selectedRunIdInput.value = JSON.stringify(selectedRunId);
        // dieses array zu inputFeld(versteckt) beim button Absetzen Form senden
      });